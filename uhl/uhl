#!/bin/bash
# (c) Juergen Orth ;-)
# $Id: uhl 151 2022-11-30 08:52:26Z HMBJOrth $
# for documentation see https://github.com/fujitsu/iRMCtools

# This program can setup USB Host Lan via ipmi on Linux systems via /dev/ipmi0
# Usage: uhl [off|on [netmask [bmcaddr [hostaddr]]]]

# SC addresses w/ missing 0x18
status=0x20 netmask=0x21 bmcaddr=0x22 hostaddr=0x23 bmcmac=0x24 hostmac=0x25

str2hex() { # string
	printf "0x%02x " ${#1}	# print length first
	echo -n "$1" | xxd -ps | sed 's/\(..\)/0x\1 /g'
}

byte2hex() { # byte
	printf "0x01 0x%02x" $1
}

printresult() { # values ..
	[ $# -lt 4 ] && return
	shift 4
	[ "$1" = 00 ] && echo -n off || ( [ "$1" = 01 ] && echo -n on || echo $* | xxd -r -p )
	echo
}

rawcmd() { # mode addr param ..
	[ "$1" = write ] && mode=0x02 || mode=0x01
	addr=$2; shift 2
	ipmitool raw 0x2E 0xE0 0x80 0x28 0x00 $mode 0x00 $addr 0x18 $*
}

case "$1" in
	on)	printresult $(rawcmd write $status $(byte2hex 1))
		[ "$2" ] && printresult $(rawcmd write $netmask $(str2hex $2))
		[ "$3" ] && printresult $(rawcmd write $bmcaddr $(str2hex $3))
		[ "$4" ] && printresult $(rawcmd write $hostaddr $(str2hex $4))
		;;
	off)	printresult $(rawcmd write $status $(byte2hex 0));;
	*)
		for cmd in status netmask bmcaddr hostaddr # bmcmac hostmac
		do
			printf "%-10s " "$cmd: "
			printresult $(eval rawcmd read \$$cmd)
		done
esac
